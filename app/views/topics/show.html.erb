<% content_for :mathjax do %>
	<%= mathjax_tag %> 	
<% end %>

<% provide(:title, "Thread #{@thread.id}") %>

<h2>
	<%= link_to "Problem #{(Problem.find(@thread.problem_id)).number}", problem_path(@thread.problem_id) %>
</h2>

<%= will_paginate @posts %>
<% @posts.each do |post| %>
	<div class="post">
		<table class="forum_table">
			<tbody>
				<tr>
					<td rowspan="2" class="forum_info">
						<div style="font-size:85%;">
							<%= post.created_at.strftime("%a, %d %b %Y, %I:%M %p") %> 
						</div>
						<span style="font-weight:bold;">
							<%= post.user.username %>
						</span>
						<br>
						<div style="font-size:95%">
							<%= post.user.score %> &nbsp;
						</div>
						<% if !post.user.country.empty? %>
							<%= flag_icon(:"#{post.user.country}", class: 'strong') %>
						<% end %>
					</td>
					<td>
						<div class="action_buttons">
							&nbsp; &nbsp;
							<% if current_user.id == post.user_id %>
								<%= link_to "Delete", post_path(post), 																		:method => :delete,
																	 :data => { :confirm => "Are you sure?" } %>
								&nbsp; &nbsp;<%= link_to "Edit", edit_post_path(post) %> &nbsp; &nbsp;
							<% end %>
							<a href="#">Report</a> &nbsp; &nbsp;
							<% @post = post %>
							<%= link_to like_path(:post => post), method: :put, remote: true do %>
								<% if current_user.liked? post %>
									<span class="glyphicon glyphicon-thumbs-up like-btn<%="#{post.id}"%> liked"></span>
								<% else %>
									<span class="glyphicon glyphicon-thumbs-up like-btn<%="#{post.id}"%>"></span>
								<% end %>
							<% end %>
							&nbsp;
							<span class="likes-count<%= post.id %>"><%= post.get_upvotes.size %> </span>
						</div>
					</td>			
				</tr>
				<tr>
					<td>
						<div	class="forum_message"><%= post.content %>
						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
<% end %>

<%= will_paginate @posts %>

<div style="text-align:right; margin-top: 35px;">
	<%= link_to "Post Reply", new_post_path(:topic_id => @thread.id) %>
</div>

<script>
  	MathJax.Hub.Queue(["Typeset",MathJax.Hub]);	
</script>

